name: Publish

on:
  push:

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    steps:
      - name: Install compiler
        uses: aminya/setup-cpp@v1
        with:
          cmake: true
          ninja: true
          setup-cpp: true
      - name: Check-out
        uses: actions/checkout@v4
      - name: Configure CMake
        run: cmake -S c/ -B c/build/ -G "Ninja Multi-Config" -D CMAKE_BUILD_TYPE=Release -D BUILD_SHARED_LIBS=NO
      - name: Build Debian package
        run: cmake --build c/build/ --config Release --target package -j 16
      - name: Upload Debian package
        uses: actions/upload-artifact@v4
        with:
          name: debian-package
          if-no-files-found: error
          path: c/build/nssgitlab-*-Linux.deb
  check-codestyle:
    name: Check Codestyle
    runs-on: ubuntu-24.04
    steps:
      - name: Install compiler
        uses: aminya/setup-cpp@v1
        with:
          clang-format: "19.1.0"
          clangtidy: true
          setup-cpp: false
      - name: Check-out
        uses: actions/checkout@v4
      - name: Check Codestyle
        working-directory: ${{github.workspace}}/c/
        run: find src/ include/ -type f -iregex '^.*\.\(c\|h\|cpp\|hpp\|cc\|hh\)$' | xargs clang-format-19 --dry-run --Werror --Wno-error=unknown
  publish:
    name: Publish
    if: github.event_name == 'push' && endsWith(github.event.base_ref, 'master') && startsWith(github.ref, 'refs/tags')
    needs:
      - build
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Download Debian Package
        uses: actions/download-artifact@v4
        with:
          name: debian-package
          path: tmp
      - name: ðŸš€ Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          files: |
            tmp/*.deb
          fail_on_unmatched_files: true
          draft: false
          prerelease: true
          generate_release_notes: true